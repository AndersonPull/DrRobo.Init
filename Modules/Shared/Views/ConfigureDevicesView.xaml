<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    x:Class="Drrobo.Modules.Shared.Views.ConfigureDevicesView"
    xmlns:navigation="clr-namespace:Drrobo.Modules.Shared.Components.NavigationBar"
    xmlns:buttons="clr-namespace:Drrobo.Modules.Shared.Components.Buttons"
    xmlns:entry="clr-namespace:Drrobo.Modules.Shared.Components.Entry"
    NavigationPage.HasNavigationBar="False"
    x:Name="ConfigureDevices">
    <Grid
        Margin="{OnPlatform Android='0,15,0,0'}"
        RowDefinitions="60,*">
        <navigation:NavigationBarComponent
            Grid.Row="0"
            ZIndex="1"
            SemanticProperties.Description="{Binding LocalizationResourceManager[ConfigDevices], Mode=OneWay}"
            Title="{Binding LocalizationResourceManager[ConfigDevices], Mode=OneWay}"/>
        <StackLayout
            Grid.Row="1"
            Margin="15"
            VerticalOptions="FillAndExpand">
            <ScrollView
                VerticalOptions="FillAndExpand"
                HorizontalOptions="FillAndExpand"
                HorizontalScrollBarVisibility="Never"
                VerticalScrollBarVisibility="Never">
                <StackLayout
                    VerticalOptions="FillAndExpand"
                    HorizontalOptions="FillAndExpand"
                    Spacing="15"
                    Margin="0,0,0,25">
                    <StackLayout HorizontalOptions="Center">
                        <Frame
                            Padding="0"
                            WidthRequest="120"
                            HeightRequest="120"
                            CornerRadius="60"
                            BackgroundColor="{DynamicResource SecondaryBackground}"
                            HasShadow="False"
                            IsClippedToBounds="True">
                            <StackLayout
                                VerticalOptions="FillAndExpand"
                                HorizontalOptions="FillAndExpand">
                                <Image
                                    Source="{Binding Model.Device.Image, Mode=TwoWay}"
                                    WidthRequest="100"
                                    VerticalOptions="CenterAndExpand"
                                    HorizontalOptions="CenterAndExpand"/>
                            </StackLayout>
                            <Frame.GestureRecognizers>
                                <TapGestureRecognizer
                                    Command="{Binding Source={x:Reference ConfigureDevices}, Path=BindingContext.SelectTypeDeviceCommand}"/>
                            </Frame.GestureRecognizers>
                        </Frame>
                        <Frame
                            Padding="0"
                            Margin="0,-30,5,0"
                            HorizontalOptions="End"
                            WidthRequest="40"
                            HeightRequest="40"
                            CornerRadius="20"
                            BackgroundColor="{DynamicResource Background}"
                            HasShadow="False"
                            IsClippedToBounds="True" >
                            <StackLayout
                                VerticalOptions="FillAndExpand"
                                HorizontalOptions="FillAndExpand">
                                <Image
                                    Source="edit_icon"
                                    WidthRequest="28"
                                    HeightRequest="28"
                                    VerticalOptions="CenterAndExpand"
                                    HorizontalOptions="CenterAndExpand"/>
                            </StackLayout>
                            <Frame.GestureRecognizers>
                                <TapGestureRecognizer
                                    Command="{Binding Source={x:Reference ConfigureDevices}, Path=BindingContext.SelectTypeDeviceCommand}"/>
                            </Frame.GestureRecognizers>
                        </Frame>
                    </StackLayout>
                    <Label
                        SemanticProperties.Description="{Binding LocalizationResourceManager[DeviceName]}"
                        Text="{Binding LocalizationResourceManager[DeviceName]}"
                        Style="{DynamicResource LabelTitleWhite}"/>
                    <entry:EntryComponent
                        Style="{DynamicResource Entry14White}"
                        Text="{Binding Model.Device.Name, Mode=TwoWay}"/>
                    <Label
                        SemanticProperties.Description="{Binding LocalizationResourceManager[SelectTheTypeOfCommunication]}"
                        Text="{Binding LocalizationResourceManager[SelectTheTypeOfCommunication]}"
                        Style="{DynamicResource LabelTitleWhite}"/>
                    <buttons:ToggleComponent
                        HorizontalOptions="Start"
                        WidthRequest="300"
                        FirstText="{Binding LocalizationResourceManager[Bluetooth]}"
                        SecondText="{Binding LocalizationResourceManager[Wifi]}"
                        Selected="{Binding Model.Device.IsBluetooth, Mode=TwoWay}"
                        Command="{Binding SelectCommunicationCommand}"/>
                    <Label
                        SemanticProperties.Description="{Binding LocalizationResourceManager[EnterDeviceURL]}"
                        Text="{Binding LocalizationResourceManager[EnterDeviceURL]}"
                        Style="{DynamicResource LabelTitleWhite}"
                        IsVisible="{Binding Model.Device.IsBluetooth, Mode=TwoWay, Converter={StaticResource InverseBoolConverter}}"/>
                    <entry:EntryComponent
                        Text="{Binding Model.Device.URL}"
                        Style="{DynamicResource Entry14White}"
                        IsVisible="{Binding Model.Device.IsBluetooth, Mode=TwoWay, Converter={StaticResource InverseBoolConverter}}"/>
                    <Label
                        SemanticProperties.Description="{Binding LocalizationResourceManager[DoesThisDeviceHaveACamera]}"
                        Text="{Binding LocalizationResourceManager[DoesThisDeviceHaveACamera]}"
                        Style="{DynamicResource LabelTitleWhite}"/>
                    <buttons:ToggleComponent
                        HorizontalOptions="Start"
                        WidthRequest="300"
                        FirstText="{Binding LocalizationResourceManager[Yes]}"
                        SecondText="{Binding LocalizationResourceManager[No]}"
                        Selected="{Binding Model.Device.HaveCamera, Mode=TwoWay}"/>
                    <Label
                        SemanticProperties.Description="{Binding LocalizationResourceManager[EnterCameraURL]}"
                        Text="{Binding LocalizationResourceManager[EnterCameraURL]}"
                        Style="{DynamicResource LabelTitleWhite}"
                        IsVisible="{Binding Model.Device.HaveCamera, Mode=TwoWay}"/>
                    <entry:EntryComponent
                        Text="{Binding Model.Device.URLCamera, Mode=TwoWay}"
                        Style="{DynamicResource Entry14White}"
                        IsVisible="{Binding Model.Device.HaveCamera, Mode=TwoWay}"/>
                </StackLayout>
            </ScrollView>
            <Button
                VerticalOptions="End"
                HorizontalOptions="Center"
                WidthRequest="300"
                IsVisible="{Binding Model.IsUpdate}"
                SemanticProperties.Description="{Binding LocalizationResourceManager[Update]}"
                Text="{Binding LocalizationResourceManager[Update]}"
                Style="{DynamicResource PrimaryButton}"
                Command="{Binding UpdateCommand}"/>
            <Button
                VerticalOptions="End"
                HorizontalOptions="Center"
                WidthRequest="300"
                IsVisible="{Binding Model.IsUpdate, Converter={StaticResource InverseBoolConverter}}"
                SemanticProperties.Description="{Binding LocalizationResourceManager[Add]}"
                Text="{Binding LocalizationResourceManager[Add]}"
                Style="{DynamicResource PrimaryButton}"
                Command="{Binding AddCommand}"/>
        </StackLayout>
    </Grid>
</ContentPage>